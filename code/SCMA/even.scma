# VARIABLE DECLARATION:
	# EXPRESSION [ 10 ]: 
		# R4 = 10
		IADDI   0     10    R4   
	# END EXPRESSION [ R4 ]

	# int n = R4
	ISTORE  65534 R4    0    
# END VARIABLE DECLARATION [ int n = R4 ]

# VARIABLE DECLARATION:
	# int sum = 0
	ISTOREI 65533 0     0    
# END VARIABLE DECLARATION [ int sum = 0 ]

# FOR LOOP: 
	# FOR INITIALIZATION: 
		# VARIABLE DECLARATION:
			# EXPRESSION [ 1 ]: 
				# R4 = 1
				IADDI   0     1     R4   
			# END EXPRESSION [ R4 ]

			# int i = R4
			ISTORE  65532 R4    0    
		# END VARIABLE DECLARATION [ int i = R4 ]

	# END FOR INTIALIZATION

	# FOR CONDITION: 
		@forLabel1: IADDI   0     0     0    
		# EXPRESSION [ i <= n ]: 
			# [65531] = i
			ILOADI  65532 0     R5   
			ISTORE  65531 R5    0    

			# [65530] = n
			ILOADI  65534 0     R5   
			ISTORE  65530 R5    0    

			# [65530] = [65531] <= [65530]
			ILOADI  65530 0     R6   
			ILOADI  65531 0     R5   
			BLEU    R5    R6    R7   
			ISTORE  65531 R7    0    

			# R4 = [65531]
			ILOADI  65531 0     R4   
		# END EXPRESSION [ R4 ]

		LNOTI   R4    0     R4   
		JMPI    R4    0     @forLabel4
	# END FOR CONDITION

	# FOR UPDATE: 
		IJMPI   1     0     @forLabel2
		@forLabel3: IADDI   0     0     0    

		# ASSIGN STATEMENT:
			# EXPRESSION [ i + 1 ]: 
				# [65531] = i
				ILOADI  65532 0     R5   
				ISTORE  65531 R5    0    

				# [65530] = 1
				ISTOREI 65530 1     0    

				# [65530] = [65531] + [65530]
				ILOADI  65530 0     R6   
				ILOADI  65531 0     R5   
				ADD     R5    R6    R7   
				ISTORE  65531 R7    0    

				# R4 = [65531]
				ILOADI  65531 0     R4   
			# END EXPRESSION [ R4 ]

			# i = R4
			ISTORE  65532 R4    0    
		# END ASSIGN STATEMENT [ i = R4 ]

		IJMPI   1     0     @forLabel1
		@forLabel2: IADDI   0     0     0    
	# END FOR UPDATE

	# FOR BODY: 
		# CONDITIONAL BRANCHES: 
			# IF: 
				# IF CONDITION: 
					# EXPRESSION [ i % 2 == 0 ]: 
						# [65531] = i
						ILOADI  65532 0     R5   
						ISTORE  65531 R5    0    

						# [65530] = 2
						ISTOREI 65530 2     0    

						# [65530] = [65531] % [65530]
						ILOADI  65530 0     R6   
						ILOADI  65531 0     R5   
						MOD     R5    R6    R7   
						ISTORE  65531 R7    0    

						# [65530] = 0
						ISTOREI 65530 0     0    

						# [65530] = [65531] == [65530]
						ILOADI  65530 0     R6   
						ILOADI  65531 0     R5   
						BEQ     R5    R6    R7   
						ISTORE  65531 R7    0    

						# R4 = [65531]
						ILOADI  65531 0     R4   
					# END EXPRESSION [ R4 ]

					LNOTI   R4    0     R4   
					JMPI    R4    0     @ifLabel6
				# END IF CONDITION

				# IF BODY: 
					# ASSIGN STATEMENT:
						# EXPRESSION [ sum + i ]: 
							# [65531] = sum
							ILOADI  65533 0     R5   
							ISTORE  65531 R5    0    

							# [65530] = i
							ILOADI  65532 0     R5   
							ISTORE  65530 R5    0    

							# [65530] = [65531] + [65530]
							ILOADI  65530 0     R6   
							ILOADI  65531 0     R5   
							ADD     R5    R6    R7   
							ISTORE  65531 R7    0    

							# R4 = [65531]
							ILOADI  65531 0     R4   
						# END EXPRESSION [ R4 ]

						# sum = R4
						ISTORE  65533 R4    0    
					# END ASSIGN STATEMENT [ sum = R4 ]

				# END IF BODY

				IJMPI   1     0     @ifLabel5
				@ifLabel6: IADDI   0     0     0    
			# END IF

			@ifLabel5: IADDI   0     0     0    
		# END CONDITIONAL BRANCHING

	# END FOR BODY

	IJMPI   1     0     @forLabel3
	@forLabel4: IADDI   0     0     0    
# END FOR LOOP

# VARIABLE DECLARATION:
	# EXPRESSION [ sum ]: 
		# R4 = sum
		ILOADI  65533 0     R4   
	# END EXPRESSION [ R4 ]

	# int result = R4
	ISTORE  65532 R4    0    
# END VARIABLE DECLARATION [ int result = R4 ]

# DEBUG: Load variable result into R15
ILOADI  65532 0     R15  
HALT    0     0     0    
